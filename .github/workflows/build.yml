name: Publish Release

on:
  push:
    tags:
    - 'v*'

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false
      - name: Create Release Artifact Folder
        run: mkdir -p ./release
      - name: Output Release URL File
        run: echo "${{ steps.create_release.outputs.upload_url }}" > ./release/url.txt
      - name: Output Release Tag File
        run: echo "${GITHUB_REF/refs\/tags\//}" > ./release/tag.txt
      - name: Upload Release URL and Tag Files
        uses: actions/upload-artifact@v2
        with:
          name: release
          path: ./release

  build_on_windows:
    name: Build on Windows
    needs: release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install NPM Packages
        run: npm install
      - name: Build Electron App
        run: npm run publish
      - name: Download Release URL and Tag Files
        uses: actions/download-artifact@v2
        with:
          name: release
          path: ./release
      - name: Get Release URL and Tag
        id: release_info
        shell: bash
        run: |
          url=`cat ./release/url.txt`
          echo ::set-output name=upload_url::$url
          tag=`cat ./release/tag.txt`
          echo ::set-output name=upload_tag::$tag
      - name: Upload Windows Release File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./dist/Lazycard-${{ steps.release_info.outputs.upload_tag }}.exe
          asset_name: Lazycard-${{ steps.release_info.outputs.upload_tag }}.exe
          asset_content_type: application

  build_on_macos:
    name: Build on macOS
    needs: release
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install NPM Packages
        run: npm install
      - name: Build Electron App
        run: npm run publish
      - name: Download Release URL and Tag Files
        uses: actions/download-artifact@v2
        with:
          name: release
          path: ./release
      - name: Get Release URL and Tag
        id: release_info
        shell: bash
        run: |
          url=`cat ./release/url.txt`
          echo ::set-output name=upload_url::$url
          tag=`cat ./release/tag.txt`
          echo ::set-output name=upload_tag::$tag
      - name: Upload macOS Release File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./dist/Lazycard-${{ steps.release_info.outputs.upload_tag }}.dmg
          asset_name: Lazycard-${{ steps.release_info.outputs.upload_tag }}.dmg
          asset_content_type: application

  build_on_ubuntu:
    name: Build on Ubuntu
    needs: release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Node.js, NPM and Yarn
        uses: actions/setup-node@v1
        with:
          node-version: 12
      - name: Install NPM Packages
        run: npm install
      - name: Build Electron App
        run: npm run publish
      - name: Download Release URL and Tag Files
        uses: actions/download-artifact@v2
        with:
          name: release
          path: ./release
      - name: Get Release URL and Tag
        id: release_info
        shell: bash
        run: |
          url=`cat ./release/url.txt`
          echo ::set-output name=upload_url::$url
          tag=`cat ./release/tag.txt`
          echo ::set-output name=upload_tag::$tag
      - name: Upload Ubuntu Release AppImage File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./dist/Lazycard-${{ steps.release_info.outputs.upload_tag }}.AppImage
          asset_name: Lazycard-${{ steps.release_info.outputs.upload_tag }}.AppImage
          asset_content_type: application
      - name: Upload Ubuntu Release Snap File
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_info.outputs.upload_url }}
          asset_path: ./dist/Lazycard-${{ steps.release_info.outputs.upload_tag }}.snap
          asset_name: Lazycard-${{ steps.release_info.outputs.upload_tag }}.snap
          asset_content_type: application